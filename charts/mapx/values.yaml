entryPoint: websecure
protocol: "https://"
endPoint: secret
portPublic: "443"
clusterIssuer: letsencrypt-staging

storageClassName: secret

# list of nodes where to deploy the pods
# node selection is based on the kubernetes.io/hostname label
nodeAffinity:
  - secret

api:
  replicas: 2
  image: fredmoser/mapx_api
  tag: 1.13.16-fix.1
  # ensure that the mx-shared volume has the right permissions and ownership
  # useful if mx-shared is an external volume mounted in the cluster e.g. NFS
  initContainers: false
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "1.5Gi"
      cpu: "500m"

app:
  replicas: 2
  image: fredmoser/mapx_app
  tag: 1.13.16-fix.1
  resources:
    requests:
      memory: "384Mi"
      cpu: "50m"
    limits:
      memory: "512Mi"
      cpu: "200m"

routines:
  resources:
    requests:
      memory: "384Mi"
      cpu: "500m"
    limits:
      memory: "768Mi"
      cpu: "1000m"

geoserver:
  image: git.unepgrid.ch/grid-pub/geoserver
  tag: 2.25.2
  admin:
    username: secret
    password: secret
  contact:
    city: secret
    country: secret
    email: secret
    organisation: secret
    person: secret
  resources:
    requests:
      memory: "4Gi"
      cpu: "100m"
    limits:
      memory: "4Gi"
      cpu: "1000m"
  storage: "4Gi"

redis:
  image: redis
  tag: 7.0.12
  resources:
    memory: "1Gi"
    cpu: "50m"

search:
  image: fredmoser/meili
  tag: 0.20.0-alpine
  masterKey: secret
  resources:
    requests:
      memory: "2Gi"
      cpu: "200m"
    limits:
      memory: "3Gi"
      cpu: "300m"
  storage: "4Gi"

postgres:
  host: db.staging.mapx.org
  db: mapx
  port: "5432"
  keyEncrypt: secret
  password:
    master: secret
    userCustom: secret
    userRead: secret
    userWrite: secret

postgrest:
  replicaCount: 1
  image:
    repository: postgrest/postgrest
    tag: v12.2.12
    pullPolicy: IfNotPresent
  openapi:
    mode: "follow-privileges"
    proxyUri: "https://postgrest.endpoint/api"
  database:
    dbUri: "postgres://user:pass@host:5432/dbname"
    schema: api
    anonRole: web_anon
  maxRows: "1000"
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe:
    httpGet:
      path: /
      port: 3000
    initialDelaySeconds: 30
    timeoutSeconds: 5
  readinessProbe:
    httpGet:
      path: /
      port: 3000
    initialDelaySeconds: 5
    timeoutSeconds: 3

swaggerui:
    replicaCount: 1
    image:
      repository: swaggerapi/swagger-ui
      tag: latest
      pullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 64Mi
    nodeSelector: {}
    tolerations: []
    affinity: {}
    livenessProbe:
      httpGet:
        path: /docs
        port: 8080
      initialDelaySeconds: 30
      timeoutSeconds: 5
    readinessProbe:
      httpGet:
        path: /docs
        port: 8080
      initialDelaySeconds: 5
      timeoutSeconds: 3

smtp:
  user: secret
  password: secret
  host: secret
  port: secret
  from: secret

mapx:
  mode: "[]"
  projectDefault: "MX-3ZK-82N-DY8-WU2-IGF"
  devMembers: "[1]"
  projectCreators: "[1]"
  rootModeMembers: "[1]"
  maptilerToken: secret
  mapboxToken: secret
  maxmindUrlDownload: secret
  storageCustom: false
  storage: "50Gi"
  contacts:
    admin: secret
    bot: secret
    guest: secret
    info: secret
    issues: secret

# additional manifests to deploy as an array
additionalManifests:
  []
  # - apiVersion: v1
  #   kind: ConfigMap
  #   metadata:
  #     name: mx-extra-config-{{ .Release.Name }}
  #   data:
  #     extra-data: "value"
