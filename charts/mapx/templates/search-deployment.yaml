apiVersion: apps/v1
kind: Deployment
metadata:
  name: mx-search-{{ .Release.Name }}
  labels:
    app: search
spec:
  replicas: 1
  selector:
    matchLabels:
      app: search
  strategy:
    type: Recreate
  template:
    metadata:
      name: mx-search-{{ .Release.Name }}
      labels:
        app: search
        network/net-backend: "true"
        network/net-frontend: "true"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/env-configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/env-secret.yaml") . | sha256sum }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                {{- range $v := .Values.nodeAffinity }}
                - {{ $v }}
                {{- end }}
      restartPolicy: Always
      securityContext:
        runAsUser: 89129
        runAsGroup: 101
        fsGroup: 101
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
        - name: mx-search-{{ .Release.Name }}
          image: {{ .Values.search.image | default "fredmoser/meili" }}:{{ .Values.search.tag | default "0.20.0-alpine" }}
          envFrom:
          - configMapRef:
              name: mx-env-{{ .Release.Name }}
          env:
            - name: MEILI_MASTER_KEY
              valueFrom:
                secretKeyRef:
                  key: MEILI_MASTER_KEY
                  name: mx-secret-{{ .Release.Name }}
          ports:
            - name: search
              containerPort: 7700
          startupProbe:
            httpGet:
              path: /health
              port: search
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 60
          readinessProbe:
            httpGet:
              path: /health
              port: search
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: search
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          resources:
            requests:
              memory: {{ .Values.search.resources.requests.memory | default "1Gi" }}
              cpu: {{ .Values.search.resources.requests.cpu | default "500m" }}
            limits:
              memory: {{ .Values.search.resources.limits.memory | default "2Gi" }}
              cpu: {{ .Values.search.resources.limits.cpu | default "1000m" }}
          volumeMounts:
            - name: mx-search-{{ .Release.Name }}
              mountPath: /data.ms
      volumes:
        - name: mx-search-{{ .Release.Name }}
          persistentVolumeClaim:
            claimName: mx-search-{{ .Release.Name }}
