apiVersion: apps/v1
kind: Deployment
metadata:
  name: mx-redis-{{ .Release.Name }}
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  strategy:
    type: Recreate
  template:
    metadata:
      name: mx-redis-{{ .Release.Name }}
      labels:
        app: redis
        network/net-backend: "true"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                {{- range $v := .Values.nodeAffinity }}
                - {{ $v }}
                {{- end }}
      restartPolicy: Always
      containers:
        - name: mx-redis-{{ .Release.Name }}
          image: {{ .Values.redisImage | default "redis" }}:{{ .Values.redisTag }}
          args:
            - redis-server
            - /usr/local/etc/redis/redis.conf
          envFrom:
          - configMapRef:
              name: mx-env-{{ .Release.Name }}
          ports:
            - name: redis
              containerPort: 6379
          startupProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 9
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - /bin/sh
                - -c
                - /health/ping_liveness_local.sh 5 # same value as timeoutSeconds
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - /bin/sh
                - -c
                - /health/ping_readiness_local.sh 1 # same value as timeoutSeconds
          resources:
            requests:
              memory: "{{ .Values.redisMaxMemoryGb | int }}Gi"
              cpu: "1000m"
            limits:
              memory: "{{ .Values.redisMaxMemoryGb | int }}Gi"
              cpu: "1000m"
          volumeMounts:
            - name: mx-redis-config-{{ .Release.Name }}
              mountPath: /usr/local/etc/redis/redis.conf
              readOnly: true
            - name: mx-redis-health-{{ .Release.Name }}
              mountPath: /health
      volumes:
        - name: mx-redis-config-{{ .Release.Name }}
          configMap:
            name: mx-redis-config-{{ .Release.Name }}
            items:
              - key: redis.conf
                path: redis.conf
        - name: mx-redis-health-{{ .Release.Name }}
          configMap:
            name: mx-redis-health-{{ .Release.Name }}
            defaultMode: 0755
